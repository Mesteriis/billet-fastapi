"""
{{ model_name }} model definition for Advanced level.

This file was auto-generated by Autogen CLI.
Application: {{ app_name }}
Level: {{ level }}
Generated at: {{ timestamp }}
Template Version: v1.0.0 (Complete)
"""

from core.base.models import BaseModel


class {{ model_name }}(BaseModel):
    """
    {{ model_name }} model for {{ app_name }} application (Advanced level).

    This model inherits all standard functionality from BaseModel:
    - UUID primary key (id)
    - Automatic timestamps (created_at, updated_at)
    - Soft delete support (deleted_at, is_deleted property)
    - Utility methods (soft_delete(), restore(), to_dict(), update())

    Advanced level features:
    - Supports full-text search
    - Advanced filtering and aggregations
    - Performance monitoring
    - Complex queries with JOIN support

    Add your custom fields and relationships here.

    Example:
        class Article(BaseModel):
            __tablename__ = "articles"
            
            title: Mapped[str] = mapped_column(String(200), nullable=False, index=True)
            content: Mapped[str] = mapped_column(Text, nullable=False)
            status: Mapped[str] = mapped_column(String(20), default="draft", index=True)
            priority: Mapped[int] = mapped_column(Integer, default=0, index=True)
            tags: Mapped[list[str]] = mapped_column(JSON, default=list)

    Available features:
    {% if features.enable_soft_delete %}- Soft delete support (inherited){% endif %}
    {% if features.enable_timestamps %}- Automatic timestamps (inherited){% endif %}
    {% if features.enable_fulltext_search %}- Full-text search support{% endif %}
    {% if features.enable_monitoring %}- Performance monitoring{% endif %}
    """

    __tablename__ = "{{ table_name }}"

    # Add your custom fields here
    # Example for Advanced level:
    # title: Mapped[str] = mapped_column(String(200), nullable=False, index=True)
    # status: Mapped[str] = mapped_column(String(20), default="active", index=True)
    # priority: Mapped[int] = mapped_column(Integer, default=0, index=True)
    # tags: Mapped[list[str]] = mapped_column(JSON, default=list)
    
    pass 