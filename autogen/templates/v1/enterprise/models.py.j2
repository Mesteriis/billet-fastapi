"""
{{ model_name }} model definition for Enterprise level.

This file was auto-generated by Autogen CLI.
Application: {{ app_name }}
Level: {{ level }}
Generated at: {{ timestamp }}
Template Version: v1.0.0 (Complete)
"""

from core.base.models import BaseModel


class {{ model_name }}(BaseModel):
    """
    {{ model_name }} model for {{ app_name }} application (Enterprise level).

    This model inherits all standard functionality from BaseModel:
    - UUID primary key (id)
    - Automatic timestamps (created_at, updated_at)
    - Soft delete support (deleted_at, is_deleted property)
    - Utility methods (soft_delete(), restore(), to_dict(), update())

    Enterprise level features:
    - Distributed caching support (Redis)
    - Event-driven architecture
    - Advanced monitoring and telemetry
    - Multi-tenant support
    - High availability and scalability
    - Comprehensive health checks
    - Performance optimization

    Add your custom fields and relationships here.

    Example:
        class Order(BaseModel):
            __tablename__ = "orders"
            
            order_number: Mapped[str] = mapped_column(String(50), unique=True, index=True)
            customer_id: Mapped[UUID] = mapped_column(UUID(as_uuid=True), index=True)
            status: Mapped[str] = mapped_column(String(20), default="pending", index=True)
            total_amount: Mapped[Decimal] = mapped_column(Numeric(10, 2), nullable=False)
            metadata: Mapped[dict] = mapped_column(JSON, default=dict)
            tenant_id: Mapped[UUID] = mapped_column(UUID(as_uuid=True), index=True)

    Available features:
    {% if features.enable_soft_delete %}- Soft delete support (inherited){% endif %}
    {% if features.enable_timestamps %}- Automatic timestamps (inherited){% endif %}
    {% if features.enable_cache %}- Distributed caching (Redis){% endif %}
    {% if features.enable_events %}- Event-driven architecture{% endif %}
    {% if features.enable_monitoring %}- Advanced monitoring and telemetry{% endif %}
    {% if features.enable_multi_tenant %}- Multi-tenant support{% endif %}
    """

    __tablename__ = "{{ table_name }}"

    # Add your custom fields here
    # Example for Enterprise level:
    # tenant_id: Mapped[UUID] = mapped_column(UUID(as_uuid=True), nullable=False, index=True)
    # metadata: Mapped[dict] = mapped_column(JSON, default=dict)
    # external_id: Mapped[str | None] = mapped_column(String(100), unique=True, index=True)
    # version: Mapped[int] = mapped_column(Integer, default=1)
    
    pass 