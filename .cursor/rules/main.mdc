---
description: 
globs: 
alwaysApply: true
---
# Frontend + Backend Dev Guide

## üß≠ –û–±—â–∏–µ –ü—Ä–∏–Ω—Ü–∏–ø—ã

- –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å  
- –ú–∏–Ω–∏–º—É–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è, –º–∞–∫—Å–∏–º—É–º –º–æ–¥—É–ª—å–Ω–æ—Å—Ç–∏  
- –ì–æ–≤–æ—Ä—è—â–∏–µ –∏–º–µ–Ω–∞ (`is_active`, `has_permission`)  
- `snake_case` –≤ —Ñ–∞–π–ª–∞—Ö –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö  
- RORO: Receive an Object, Return an Object
- docstring –Ω–∞ –∞–Ω–≥–ª–∏—Å–∫–æ–º —è–∑—ã–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Sphinx
- —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö —Å—Ç—Ä–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏—Å–∫–æ–º
- –≤–º–µ—Å—Ç–æ print –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–æ–≥–µ—Ä –ø–æ –∏–º–µ–Ω–∏ –∏–º—è_—Å–ª–æ—è.–∏–º—è_–º–æ–¥—É–ª—è (`api.user` –∏–ª–∏ `repo.user`) –¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è `test_session`

---

## ‚öôÔ∏è Backend: FastAPI

- `def` ‚Äî –¥–ª—è sync-—Ñ—É–Ω–∫—Ü–∏–π, `async def` ‚Äî –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π  
- –í–∞–ª–∏–¥–∞—Ü–∏—è —á–µ—Ä–µ–∑ `Pydantic` –≤–æ –≤—Å–µ—Ö —Å–ª–æ—è—Ö  
- –°—Ç—Ä–æ–≥–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è  
- –†–∞–Ω–Ω–∏–π `return` –∏ guard-—É—Å–ª–æ–≤–∏—è  
- –ö–ª–∞—Å—Å—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤–æ –≤—Å–µ—Ö —Å–ª–æ—è—Ö –ø—Ä–æ–º–µ `api` 
- –û—à–∏–±–∫–∏ ‚Äî —á–µ—Ä–µ–∑ `HTTPException` –Ω–æ —á–µ—Ä–µ–∑ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç `BaseException` –ø–æ —Å–ª–æ–π–Ω–æ
- –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ `structlog`, –ø—Ä–æ–±—Ä–æ—Å `trace_id`

### üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ Backend

```bash
src/
  apps/
    users/
      api/
      services/
      schemas/
      models/
      repo/
  core/
    config/
    db/
    depends/
    middleware/
  main.py
```

### üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

- `pytest`, `pytest-asyncio`, `pytest-mock`
- `AsyncApiTestClient` –¥–ª—è API  
- `factory_boy`, `async_factory_boy`  
- –ü–æ–∫—Ä—ã—Ç–∏–µ –ª–æ–≥–∏–∫–∏ ‚Äî 80%+

### üîê –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –û—à–∏–±–∫–∏

- –ò—Å–ø–æ–ª—å–∑—É–π `BaseModel`  
- –û—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ `HTTPException` –∏ middleware  
- Guard-—É—Å–ª–æ–≤–∏—è –∏ `early return` –≤–º–µ—Å—Ç–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö `if`

### üö¶ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞

- Docker (multi-stage)  
- CI: GitHub Actions + Woodpecker CI
- CI stage:  `lint` -> `test` -> `build`-> `publish` -> `push github (manual)` ->`deploy`
- CD: GitHub Actions + Woodpecker CI
- Pre-commit: `ruff`, `mypy`, `black`, `bandit`  
- Semantic Versioning + Conventional Commits

---

## üìã Conventional Commits

```text
<type>[optional scope]: <description>

[optional body]

[optional footer(s)]
```

### üí° –¢–∏–ø—ã –∫–æ–º–º–∏—Ç–æ–≤:

- `feat`: –Ω–æ–≤–∞—è —Ñ–∏—á–∞ (MINOR)  
- `fix`: –±–∞–≥—Ñ–∏–∫—Å (PATCH)  
- `docs`, `style`, `refactor`, `test`, `chore`, `ci`, `build`, `perf`  
- `BREAKING CHANGE:` –∏–ª–∏ `!` ‚Äî MAJOR

---

## üé® Frontend: Vue 3 Options API + Vanilla JS (SSR —Å FastAPI)

> Vue 3 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ SSR-—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥, —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è —á–µ—Ä–µ–∑ —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä FastAPI (–Ω–∞–ø—Ä–∏–º–µ—Ä, Jinja2). –í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ backend-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–µ–∑ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ frontend-—Å–µ—Ä–≤–µ—Ä–∞.

- –ò—Å–ø–æ–ª—å–∑—É–µ–º `data()`, `methods`, `computed`  
- `props` –∏ `$emit` –¥–ª—è —Å–≤—è–∑–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤  
- `watch`, `mounted`, `beforeUnmount`  
- –ë–µ–∑ TypeScript ‚Äî —Ç–æ–ª—å–∫–æ Vanilla JS

### üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ Frontend (SSR)

```bash
src/
  components/
  views/
  router/
  store/
  assets/
  App.vue
  main.js
```

### ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. –ò—Å–ø–æ–ª—å–∑—É–π **Vanilla JS** –≤–æ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –∏ —Ö—É–∫–∞—Ö  
2. –Ø–≤–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–π `props` –∏ `emits`  
3. –ò—Å–ø–æ–ª—å–∑—É–π `<Teleport>` –¥–ª—è –º–æ–¥–∞–ª–æ–∫/–ø–æ—Ä—Ç–∞–ª–æ–≤  
4. `<Suspense>` –¥–ª—è async-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤  
5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: `try/catch`, `errorCaptured`, fallback UI  
6. –°–ª–µ–¥—É–π [Vue Style Guide](mdc:https:/vuejs.org/style-guide)  
7. –ò—Å–ø–æ–ª—å–∑—É–π **Vite** –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ dev-—Å–µ—Ä–≤–µ—Ä–∞

---

