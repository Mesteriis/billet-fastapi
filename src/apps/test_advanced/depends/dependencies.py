"""
TestAdvanced dependencies.

This file was auto-generated by Autogen CLI.
Application: test_advanced
Level: Advanced
Generated at: 2025-06-22T16:30:22.531632
"""

from typing import AsyncGenerator

from fastapi import Depends
from sqlalchemy.ext.asyncio import AsyncSession

from core.database import get_async_session
from apps.test_advanced.repo.test_advanced_repo import TestAdvancedRepository
from apps.test_advanced.services.test_advanced_service import TestAdvancedService


async def get_testadvanced_repository(
    session: AsyncSession = Depends(get_async_session)
) -> AsyncGenerator[TestAdvancedRepository, None]:
    """
    Dependency to get TestAdvanced repository instance.
    
    This dependency provides a TestAdvancedRepository instance
    using the database session from FastAPI's dependency injection.
    
    Args:
        session: Database session from dependency injection
        
    Yields:
        TestAdvancedRepository instance
        
    Example:
        >>> @router.get("/testadvanceds")
        ... async def list_testadvanceds(
        ...     repo: TestAdvancedRepository = Depends(get_testadvanced_repository)
        ... ):
        ...     return await repo.list_active()
    """
    repository = TestAdvancedRepository(session)
    try:
        yield repository
    finally:
        # Repository cleanup if needed
        pass


async def get_testadvanced_service(
    session: AsyncSession = Depends(get_async_session)
) -> AsyncGenerator[TestAdvancedService, None]:
    """
    Dependency to get TestAdvanced service instance.
    
    This dependency provides a TestAdvancedService instance
    using the database session from FastAPI's dependency injection.
    The service includes business logic and validation.
    
    Args:
        session: Database session from dependency injection
        
    Yields:
        TestAdvancedService instance
        
    Example:
        >>> @router.post("/testadvanceds")
        ... async def create_testadvanced(
        ...     data: TestAdvancedCreate,
        ...     service: TestAdvancedService = Depends(get_testadvanced_service)
        ... ):
        ...     return await service.create_testadvanced(data)
    """
    service = TestAdvancedService(session)
    try:
        yield service
    finally:
        # Service cleanup if needed
        pass


# Convenience aliases for shorter imports
TestAdvancedRepositoryDep = Depends(get_testadvanced_repository)
TestAdvancedServiceDep = Depends(get_testadvanced_service)


# Export dependencies for easy importing
__all__ = [
    "get_testadvanced_repository",
    "get_testadvanced_service",
    "TestAdvancedRepositoryDep",
    "TestAdvancedServiceDep"
] 