"""
TestProduct model definition.

This file was auto-generated by Autogen CLI.
Application: test_products
Level: BasicCRUD
Generated at: 2025-06-22T15:53:05.029679
"""

from sqlalchemy import String, Boolean, DateTime
from sqlalchemy.orm import Mapped, mapped_column
from sqlalchemy.sql import func

from core.base.models import BaseModel


class TestProduct(BaseModel):
    """
    TestProduct model for test_products application.

    This model provides basic CRUD functionality with the following features:
    - Soft delete support
    - Automatic timestamps (created_at, updated_at)
    - Pagination support

    Example:
        Create a new testproduct:
        >>> testproduct = TestProduct(name="Sample TestProduct")
        >>> session.add(testproduct)
        >>> await session.commit()

    Attributes:
        name: The name of the testproduct
        is_deleted: Soft delete flag
        created_at: Creation timestamp
        updated_at: Last update timestamp
    """

    # Main fields
    name: Mapped[str] = mapped_column(
        String(255), 
        nullable=False, 
        comment="TestProduct name",
        index=True
    )

    
    # Soft delete support
    is_deleted: Mapped[bool] = mapped_column(
        Boolean,
        default=False,
        nullable=False,
        comment="Soft delete flag",
        index=True
    )
    

    
    # Timestamps
    created_at: Mapped[DateTime] = mapped_column(
        DateTime(timezone=True),
        server_default=func.now(),
        comment="Creation timestamp"
    )
    
    updated_at: Mapped[DateTime] = mapped_column(
        DateTime(timezone=True),
        server_default=func.now(),
        onupdate=func.now(),
        comment="Last update timestamp"
    )
    

    def __repr__(self) -> str:
        """String representation of TestProduct."""
        return f"<TestProduct(id={self.id}, name='{self.name}')>"

    def __str__(self) -> str:
        """Human-readable string representation."""
        return self.name

    
    def soft_delete(self) -> None:
        """Mark this testproduct as deleted."""
        self.is_deleted = True

    def restore(self) -> None:
        """Restore this testproduct from soft delete."""
        self.is_deleted = False

    @property
    def is_active(self) -> bool:
        """Check if testproduct is active (not deleted)."""
        return not self.is_deleted
     